version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: lndx-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: lndx_db
      MYSQL_USER: lndx_user
      MYSQL_PASSWORD: lndx_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - lndx-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: lndx-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - lndx-network

  # 后端应用
  backend:
    build: .
    container_name: lndx-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://lndx_user:lndx_pass@mysql:3306/lndx_db
      - JWT_SECRET=lndx_super_secret_jwt_key_2025
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - lndx-network

  # Nginx代理（可选）
  nginx:
    image: nginx:alpine
    container_name: lndx-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - lndx-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  lndx-network:
    driver: bridge

